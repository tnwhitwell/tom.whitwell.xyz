before_script:
  - apk --no-cache add curl gettext

stages:
  - test
  - build
  - release
  - deploy
  - check

variables:
  CONTAINER_IMAGE: ${CI_REGISTRY_IMAGE}:${CI_COMMIT_SHA}
  CONTAINER_IMAGE_LATEST: ${CI_REGISTRY_IMAGE}:latest
  DOCKER_DRIVER: overlay2

  KUBECONFIG: /etc/deploy/config
  DEV_NAMESPACE: my-website-dev
  PROD_NAMESPACE: my-website-prod

check-markdown:
  image: gouvinb/docker-markdownlint
  stage: test
  script: markdownlint content/

build:
  image: tnwhitwell/docker-hugo-builder:0.40
  services:
    - docker:dind
  stage: build
  script:
    - hugo -b "https://whi.tw/ell" -d public
    - hugo -b "https://whi.tw/ell/amp" --config amp.toml -d public/amp
  variables:
    GIT_SUBMODULE_STRATEGY: recursive

release:
  stage: release
  image: docker:latest
  services:
    - docker:dind
  variables:
    DOCKER_HOST: tcp://localhost:2375
  script:
    - docker version
    - docker login -u gitlab-ci-token -p ${CI_BUILD_TOKEN} ${CI_REGISTRY}
    - docker build --pull -t "${CONTAINER_IMAGE}" .
    - docker tag ${CONTAINER_IMAGE} ${CONTAINER_IMAGE_LATEST}
    - docker push ${CONTAINER_IMAGE}
    - docker push ${CONTAINER_IMAGE_LATEST}

k8s-deploy-dev:
  image: tnwhitwell/docker-kubectl:v1.10.0
  services:
    - docker:dind
  stage: deploy
  before_script:
    - mkdir -p /etc/deploy
    - echo ${kube_config} | base64 -d > ${KUBECONFIG}
    - kubectl config use-context default-context
  script:
    - /bin/sh deploy/deploy.sh ${CI_REGISTRY_IMAGE} ${CI_COMMIT_SHA} dev dev.whi.tw
  environment:
    name: dev
    url: https://dev.whi.tw/ell
  only:
    - develop
    - master

k8s-deploy-prod:
  image: tnwhitwell/docker-kubectl:v1.10.0
  services:
    - docker:dind
  stage: deploy
  before_script:
    - mkdir -p /etc/deploy
    - echo ${kube_config} | base64 -d > ${KUBECONFIG}
    - kubectl config use-context default-context
  script:
    - /bin/sh deploy/deploy.sh ${CI_REGISTRY_IMAGE} ${CI_COMMIT_SHA} prod whi.tw
  environment:
    name: prod
    url: https://whi.tw/ell
  only:
    - master

check-deploy-finished:
  image: tnwhitwell/docker-kubectl:v1.10.0
  stage: check
  script:
    - while ! kubectl rollout status deployment/my-website-${CI_ENVIRONMENT_NAME} -n my-website-${CI_ENVIRONMENT_NAME}; do sleep 1; done
  only:
    - master
    - develop
