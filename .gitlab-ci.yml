before_script:
  - apk --no-cache add curl gettext

stages:
  - test
  - build
  - release
  - deploy
  - check

variables:
  CONTAINER_IMAGE: ${CI_REGISTRY_IMAGE}:${CI_COMMIT_SHA}
  CONTAINER_IMAGE_LATEST: ${CI_REGISTRY_IMAGE}:latest
  DOCKER_DRIVER: overlay2

  KUBECONFIG: /etc/deploy/config
  PROD_NAMESPACE: my-website-prod

check-markdown:
  image: gouvinb/docker-markdownlint
  stage: test
  script: markdownlint content/

build:
  image: tnwhitwell/docker-hugo-builder:0.40
  services:
    - docker:dind
  stage: build
  artifacts:
    paths:
     - public/
  script:
    - hugo -b "https://whi.tw/ell" -d public
    - hugo -b "https://whi.tw/ell/amp" --config amp.toml -d public/amp
  variables:
    GIT_SUBMODULE_STRATEGY: recursive

release:
  stage: release
  image: docker:latest
  services:
    - docker:dind
  variables:
    DOCKER_HOST: tcp://localhost:2375
  script:
    - docker version
    - docker login -u ${CI_REGISTRY_USER} -p ${CI_REGISTRY_PASSWORD} ${CI_REGISTRY}
    - docker build --pull -t "${CONTAINER_IMAGE}" .
    - docker tag ${CONTAINER_IMAGE} ${CONTAINER_IMAGE_LATEST}
    - docker push ${CONTAINER_IMAGE}
    - docker push ${CONTAINER_IMAGE_LATEST}

k8s-deploy-prod:
  image: tnwhitwell/docker-kubectl:v1.12.1_v2.11.0
  services:
    - docker:dind
  stage: deploy
  before_script:
    - mkdir -p /etc/deploy
    - echo ${kube_config} | base64 -d > ${KUBECONFIG}
    - kubectl config use-context default-context
  script:
    - helm upgrade --name my-website ./helm/whi-tw-site --values ./deploy/helm/values.yml --set image.tag=${CI_COMMIT_SHA}
  environment:
    name: prod
    url: https://whi.tw/ell
  only:
    - master

check-deploy-finished:
  image: tnwhitwell/docker-kubectl:v1.10.0
  stage: check
  before_script:
    - mkdir -p /etc/deploy
    - echo ${kube_config} | base64 -d > ${KUBECONFIG}
  script:
    - while ! kubectl rollout status deployment/my-website-prod -n my-website-prod; do sleep 1; done
  only:
    - master
